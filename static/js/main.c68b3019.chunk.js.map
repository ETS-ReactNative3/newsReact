{"version":3,"sources":["news.js","components/Article.js","Weather/weatherFetcher.js","Weather/WeatherView.js","Weather/Pogoda.js","contexts/Users.js","components/authentication/SignIn.js","components/authentication/SignUp.js","components/CountryContentSelect.js","App.js","registerServiceWorker.js","config/firebaseConfig.js","setupFirebase.js","index.js"],"names":["url","_callee","props","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","then","response","json","articles","stop","this","Article","react_default","createElement","Button_default","onClick","handleRefresh","GridList_default","className","style","marginLeft","marginRight","cols","filter","article","split","map","index","articleImg","urlToImage","GridListTile_default","key","src","placeholder","process","alt","title","slice","GridListTileBar","subtitle","author","actionIcon","href","IconButton","children","InfoIcon","Info_default","Component","WeatherView","weather","current_observation","display_location","full","icon_url","join","temp_c","image","Pogoda","state","refreshing","handleWRefresh","_this","setState","fetchWeather","_this2","_getWeather","apply","arguments","getWeather","catch","error","console","log","message","WeatherView_WeatherView","UserContext","React","createContext","UserConsumer","Consumer","UserProvider","_Component","_getPrototypeOf2","Object","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","concat","signInError","user","signing","signIn","username","password","auth","signInWithEmailAndPassword","signOut","signUp","createUserWithEmailAndPassword","inherits","createClass","value","unsubscribe","onAuthStateChanged","Provider","withUser","UserAwareComponent","assign","displayName","name","handleChange","event","defineProperty","target","handleSubmit","preventDefault","onSubmit","type","onChange","CountryContentSelect","handleSelectSubmit","selectValue","handleSelectChange","fetchNews","_x","_getNews","getNews","SignIn","SignUp","react","Weather_Pogoda","components_CountryContentSelect","email","Article_Article","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","config","ReactDOM","render","Users_UserProvider","src_App_0","document","getElementById","URL","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"uPAAQA,EAAM,uGAEP,SAAAC,EAAuBC,GAAvB,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAEEC,MAAMV,EAAIE,EAAM,4CACpBS,KAAK,SAAAC,GAAQ,OAAEA,EAASC,SACxBF,KAAK,SAAAE,GAAI,OAAEA,EAAKC,YAJd,wBAAAR,EAAAS,SAAAd,EAAAe,wHCMcC,mLAEjB,OACEC,EAAAd,EAAAe,cAAA,WACED,EAAAd,EAAAe,cAACC,EAAAhB,EAAD,CAAQiB,QAASL,KAAKd,MAAMoB,eAA5B,UACAJ,EAAAd,EAAAe,cAACI,EAAAnB,EAAD,CACEoB,UAAW,iBACXC,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAC1CC,KAAM,GAELZ,KAAKd,MAAMY,SACTe,OAAO,SAAAC,GAAO,MAAiC,MAA7BA,EAAQ9B,IAAI+B,MAAM,IAAI,KACxCC,IAAI,SAACF,EAASG,GACb,IAAMC,EAAaJ,EAAQK,WAC3B,OACIjB,EAAAd,EAAAe,cAACiB,EAAAhC,EAAD,CACIiC,IAAKP,EAAQK,YAES,OAAvBL,EAAQK,WACPjB,EAAAd,EAAAe,cAAA,OACEK,UAAW,eACXc,IAAKJ,EACLK,YACEC,8BAEFC,IAAKX,EAAQY,MAAMC,MAAM,EAAG,MAG9BzB,EAAAd,EAAAe,cAAA,OACEK,UAAW,eACXc,IAAKE,sBACLC,IAAKX,EAAQY,MAAMC,MAAM,EAAG,MAIhCzB,EAAAd,EAAAe,cAACyB,EAAA,EAAD,CACIF,MAAOZ,EAAQY,MACfG,SAAU3B,EAAAd,EAAAe,cAAA,mBAAWW,EAAQgB,QAC7BC,WACI7B,EAAAd,EAAAe,cAAA,KAAG6B,KAAMlB,EAAQ9B,KACjBkB,EAAAd,EAAAe,cAAC8B,EAAA,EAAD,CAAYC,SAAUC,IAAU3B,UAAW,cACvCN,EAAAd,EAAAe,cAACiC,EAAAhD,EAAD,sBAzCKiD,aCR/BrD,UAAM,0IAEL,SAAAC,IAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACEC,MAAMV,GACVW,KAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFxB,wBAAAP,EAAAS,SAAAd,EAAAe,oCCCcsC,mLAIjB,OACyB,OAAvBtC,KAAKd,MAAMqD,QACXrC,EAAAd,EAAAe,cAAA,WACAD,EAAAd,EAAAe,cAAA,wBAAiBH,KAAKd,MAAMqD,QAAQC,oBAAoBC,iBAAiBC,MACvExC,EAAAd,EAAAe,cAAA,OAAKmB,IAAK,QAAUtB,KAAKd,MAAMqD,QAAQC,oBAAoBG,SAAS5B,MAAM,IAAIY,MAAM,GAAGiB,KAAK,IAAKnB,IAAK,gBACtGvB,EAAAd,EAAAe,cAAA,0BAAkBH,KAAKd,MAAMqD,QAAQC,oBAAoBK,OAAzD,KACA3C,EAAAd,EAAAe,cAAA,OAAKmB,IAAK,QAAUtB,KAAKd,MAAMqD,QAAQC,oBAAoBM,MAAM9D,IAAI+B,MAAM,IAAIY,MAAM,GAAGiB,KAAK,IAAKnB,IAAK,sBAC/FvB,EAAAd,EAAAe,cAAA,+BAXyBkC,aCoC1BU,6MAhCbC,MAAQ,CACNT,QAAS,KACTU,YAAY,KAadC,eAAiB,WACfC,EAAKC,SAAS,CACVH,YAAY,GACd,kBAAME,EAAKE,qGAZbrD,KAAKqD,sDAGQ,IAAAC,EAAAtD,MFdV,WAAP,OAAAuD,EAAAC,MAAAxD,KAAAyD,YEeIC,GAAa/D,KAAK,SAAA4C,GAAO,OAAIe,EAAKF,SAAS,CAACb,QAASA,EAASU,YAAY,MACvEU,MAAM,SAACC,GAAD,OAAYN,EAAKF,SAAS,CAACH,YAAY,GAAQY,QAAQC,IAAIF,EAAMG,6CAa1E,OACE7D,EAAAd,EAAAe,cAAA,OAAKK,UAAU,OACbN,EAAAd,EAAAe,cAAC6D,EAAD,CAAad,eAAgBlD,KAAKkD,eAAgBX,QAASvC,KAAKgD,MAAMT,kBA3BzDF,8BCJf4B,EAAcC,IAAMC,gBAEbC,EAAeH,EAAYI,SAE3BC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAArB,EAAAsB,OAAAC,EAAA,EAAAD,CAAAzE,KAAAsE,GAAA,QAAAK,EAAAlB,UAAAmB,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAtB,UAAAsB,GAAA,OAAA5B,EAAAsB,OAAAO,EAAA,EAAAP,CAAAzE,MAAAwE,EAAAC,OAAAQ,EAAA,EAAAR,CAAAH,IAAAY,KAAA1B,MAAAgB,EAAA,CAAAxE,MAAAmF,OAAAN,MACE7B,MAAQ,CACNoC,YAAa,KACbC,KAAM,KACNC,QAAS,KAETC,OAAQ,SAACC,EAAUC,GACjBtC,EAAKC,SAAS,CAACkC,SAAS,IACxBI,iBAAOC,2BAA2BH,EAAUC,GAAU9B,MACpD,SAAAC,GAAK,OAAIT,EAAKC,SAAS,CACrBgC,YAAaxB,EACb0B,SAAS,OAIfM,QAAS,kBAAMF,iBAAOE,WACtBC,OAAQ,SAACL,EAAUC,GACjB,OAAOC,iBAAOI,+BAA+BN,EAAUC,KAjB7DtC,EAAA,OAAAsB,OAAAsB,EAAA,EAAAtB,CAAAH,EAAAC,GAAAE,OAAAuB,EAAA,EAAAvB,CAAAH,EAAA,EAAAjD,IAAA,oBAAA4E,MAAA,WAsBsB,IAAA3C,EAAAtD,KAClBA,KAAKkG,YAAcR,iBAAOS,mBACxB,SAAAd,GAAI,OAAI/B,EAAKF,SAAS,CAAEiC,KAAMA,EAC9BC,SAAS,QAzBf,CAAAjE,IAAA,uBAAA4E,MAAA,WA8BQjG,KAAKkG,aACPlG,KAAKkG,gBA/BX,CAAA7E,IAAA,SAAA4E,MAAA,WAoCI,OACE/F,EAAAd,EAAAe,cAAC8D,EAAYmC,SAAb,CAAsBH,MAAOjG,KAAKgD,OAC/BhD,KAAKd,MAAMgD,cAtCpBoC,EAAA,CAAkCjC,aA4C3B,SAASgE,EAAShE,GACvB,SAASiE,EAAmBpH,GAC1B,OACEgB,EAAAd,EAAAe,cAACiE,EAAD,KAEI,SAAApB,GAAK,OAAI9C,EAAAd,EAAAe,cAACkC,EAADoC,OAAA8B,OAAA,GAAerH,EAAW8D,MAQ3C,OAFAsD,EAAmBE,YAAnB,aAAArB,OAA8C9C,EAAUmE,aAAenE,EAAUoE,MAAQ,YAAzF,KAEOH,aCjBMD,+MAzCbrD,MAAQ,CACNwC,SAAU,GACVC,SAAU,MAGZiB,aAAe,SAAAC,GACbxD,EAAKC,SAALqB,OAAAmC,EAAA,EAAAnC,CAAA,GACGkC,EAAME,OAAOJ,KAAOE,EAAME,OAAOZ,WAItCa,aAAe,SAAAH,GACbA,EAAMI,iBACN5D,EAAKjE,MAAMqG,OAAOpC,EAAKH,MAAMwC,SAAUrC,EAAKH,MAAMyC,mFAIlD,OACEvF,EAAAd,EAAAe,cAAA,WACED,EAAAd,EAAAe,cAAA,qBACCH,KAAKd,MAAMkG,aAAelF,EAAAd,EAAAe,cAAA,SAAIH,KAAKd,MAAMkG,YAAYrB,SACtD7D,EAAAd,EAAAe,cAAA,QAAM6G,SAAUhH,KAAK8G,cACnB5G,EAAAd,EAAAe,cAAA,SACE8F,MAAOjG,KAAKgD,MAAMwC,SAClBiB,KAAK,WACLQ,KAAK,OACLC,SAAUlH,KAAK0G,eAEjBxG,EAAAd,EAAAe,cAAA,SACE8F,MAAOjG,KAAKgD,MAAMyC,SAClBgB,KAAK,WACLQ,KAAK,WACLC,SAAUlH,KAAK0G,eAEjBxG,EAAAd,EAAAe,cAAA,kCApCekC,cC8CVgE,+MA5CbrD,MAAQ,CACNwC,SAAU,GACVC,SAAU,GACV7B,MAAO,QAGT8C,aAAe,SAAAC,GACbxD,EAAKC,SAALqB,OAAAmC,EAAA,EAAAnC,CAAA,GACGkC,EAAME,OAAOJ,KAAOE,EAAME,OAAOZ,WAItCa,aAAe,SAAAH,GACbA,EAAMI,iBACN5D,EAAKjE,MAAM2G,OAAO1C,EAAKH,MAAMwC,SAAUrC,EAAKH,MAAMyC,UAAU9B,MAC1D,SAAAC,GAAK,OAAIT,EAAKC,SAAS,CAAEQ,qFAK3B,OACE1D,EAAAd,EAAAe,cAAA,WACED,EAAAd,EAAAe,cAAA,qBACCH,KAAKgD,MAAMY,OAAS1D,EAAAd,EAAAe,cAAA,SAAIH,KAAKgD,MAAMY,MAAMG,SAC1C7D,EAAAd,EAAAe,cAAA,QAAM6G,SAAUhH,KAAK8G,cACnB5G,EAAAd,EAAAe,cAAA,SACE8F,MAAOjG,KAAKgD,MAAMwC,SAClBiB,KAAK,WACLQ,KAAK,OACLC,SAAUlH,KAAK0G,eAEjBxG,EAAAd,EAAAe,cAAA,SACE8F,MAAOjG,KAAKgD,MAAMyC,SAClBgB,KAAK,WACLQ,KAAK,WACLC,SAAUlH,KAAK0G,eAEjBxG,EAAAd,EAAAe,cAAA,kCAvCekC,cCeV8E,2LAdP,OACIjH,EAAAd,EAAAe,cAAA,QAAM6G,SAAUhH,KAAKd,MAAMkI,oBAC3BlH,EAAAd,EAAAe,cAAA,aACED,EAAAd,EAAAe,cAAA,UAAQ8F,MAAOjG,KAAKd,MAAMmI,YAAaH,SAAUlH,KAAKd,MAAMoI,oBAC1DpH,EAAAd,EAAAe,cAAA,UAAQ8F,MAAM,MAAd,OACA/F,EAAAd,EAAAe,cAAA,UAAQ8F,MAAM,MAAd,UACA/F,EAAAd,EAAAe,cAAA,UAAQ8F,MAAM,MAAd,WACA/F,EAAAd,EAAAe,cAAA,UAAQ8F,MAAM,MAAd,qBAToB5D,cCoFrBgE,+MA3EbrD,MAAQ,CACNlD,SAAU,GACVmD,YAAY,EACZoE,YAAa,QAsBf/G,cAAgB,WACd6C,EAAKC,SAAS,CACVtD,SAAU,GACVmD,YAAY,GACd,kBAAME,EAAKoE,iBAKfD,mBAAqB,SAAAX,GACvBxD,EAAKC,SAAS,CACZiE,YAAaV,EAAME,OAAOZ,OACpB9C,EAAK7C,oBAGX8G,mBAAqB,SAAAT,GACnBxD,EAAK7C,gBACLqG,EAAMI,qGAnCN/G,KAAKuH,gDAGK,IAAAjE,EAAAtD,KACmB,OAA3BA,KAAKgD,MAAMqE,aAAwBrH,KAAKoD,SAAS,CAACiE,YAAa,OTpB9D,SAAPG,GAAA,OAAAC,EAAAjE,MAAAxD,KAAAyD,WSsBIiE,CAAQ1H,KAAKgD,MAAMqE,aAClB1H,KAAK,SAAAG,GAAQ,OAAIwD,EAAKF,SACrB,CAACtD,WAAUmD,YAAY,MAEvBU,MACF,kBACCL,EAAKF,SACH,CAACH,YAAY,uCA4BhB,OAEwB,OAApBjD,KAAKd,MAAMmG,MACqB,IAAxBrF,KAAKd,MAAMoG,QACTpF,EAAAd,EAAAe,cAAA,OAAKK,UAAU,WAAkBN,EAAAd,EAAAe,cAAA,WACrCD,EAAAd,EAAAe,cAACwH,EAAD,MACAzH,EAAAd,EAAAe,cAACyH,EAAD,OAIF1H,EAAAd,EAAAe,cAAC0H,EAAA,SAAD,KACM3H,EAAAd,EAAAe,cAAC2H,EAAD,MACA5H,EAAAd,EAAAe,cAAC4H,EAAD,CAAsBX,mBAAoBpH,KAAKoH,mBAAoBC,YAAarH,KAAKgD,MAAMqE,YAAaC,mBAAoBtH,KAAKsH,qBACjIpH,EAAAd,EAAAe,cAAA,yBAAiBH,KAAKd,MAAMmG,KAAK2C,MAAjC,IAAwC9H,EAAAd,EAAAe,cAAA,UAAQE,QAASL,KAAKd,MAAM0G,SAA5B,cACjB,IAA1B5F,KAAKgD,MAAMC,WAAsB/C,EAAAd,EAAAe,cAAA,OAAKK,UAAU,WAAkBN,EAAAd,EAAAe,cAAC8H,EAAD,CAC/D3H,cAAeN,KAAKM,cACpBR,SAAUE,KAAKgD,MAAMlD,mBAjErBuC,cCAZ6F,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT9I,KAAK,SAAAkJ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/F,QACf0F,UAAUC,cAAcO,WAK1BrF,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,KC/ElD,IAAAuF,EAAA,CACXC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,GACfC,kBAAmB,gBCHFC,IAASC,cAAcC,GCO5CC,IAASC,OAEL5J,EAAAd,EAAAe,cAAC4J,EAAD,KACA7J,EAAAd,EAAAe,cAAC6J,EAAD,OAIEC,SAASC,eAAe,SHGf,WACb,GAA6C,kBAAmBxB,UAAW,CAGzE,GADkB,IAAIyB,IAAI3I,aAAwB4G,OAAOC,UAC3C+B,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAAtD,OAAM3D,aAAN,sBAEP0G,GAiDV,SAAiCO,GAE/B/I,MAAM+I,GACH9I,KAAK,SAAAC,GAGkB,MAApBA,EAAS0K,SACuD,IAAhE1K,EAAS2K,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C/B,UAAUC,cAAc+B,MAAM/K,KAAK,SAAAkJ,GACjCA,EAAa8B,aAAahL,KAAK,WAC7ByI,OAAOC,SAASuC,aAKpBpC,EAAgBC,KAGnB9E,MAAM,WACLE,QAAQC,IACN,mEArEA+G,CAAwBpC,GAIxBC,UAAUC,cAAc+B,MAAM/K,KAAK,WACjCkE,QAAQC,IACN,+GAMJ0E,EAAgBC,MG9BxBqC","file":"static/js/main.c68b3019.chunk.js","sourcesContent":["  const url = \"https://newsapi.org/v2/top-headlines?pageSize=20&country=\";\r\n\r\nexport async function getNews(props){\r\n\r\n  return fetch(url+props+\"&apiKey=33fdb4b7ff7d469f9e847ea010036db2\")\r\n    .then(response=>response.json())\r\n    .then(json=>json.articles)\r\n}","import React, { Component } from \"react\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListItem from \"@material-ui/core/GridListTile\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport GridListTileBar from \"@material-ui/core/es/GridListTileBar/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/es/IconButton/IconButton\";\r\n\r\nexport default class Article extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button onClick={this.props.handleRefresh}>Reload</Button>\r\n        <GridList\r\n          className={\"news-container\"}\r\n          style={{ marginLeft: \"auto\", marginRight: \"auto\" }}\r\n          cols={4}\r\n        >\r\n          {this.props.articles\r\n            .filter(article => article.url.split(\"\")[4] === \"s\")\r\n            .map((article, index) => {\r\n              const articleImg = article.urlToImage;\r\n              return (\r\n                  <GridListItem\r\n                      key={article.urlToImage}\r\n                  >\r\n                    {article.urlToImage !== null ? (\r\n                      <img\r\n                        className={\"articleImage\"}\r\n                        src={articleImg}\r\n                        placeholder={\r\n                          process.env.PUBLIC_URL + \"/loading_icon.gif\"\r\n                        }\r\n                        alt={article.title.slice(0, 15)}\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        className={\"articleImage\"}\r\n                        src={process.env.PUBLIC_URL + \"/news.jpg\"}\r\n                        alt={article.title.slice(0, 15)}\r\n                      />\r\n                    )}\r\n\r\n                    <GridListTileBar\r\n                        title={article.title}\r\n                        subtitle={<span>by: {article.author}</span>}\r\n                        actionIcon={\r\n                            <a href={article.url}>\r\n                            <IconButton children={InfoIcon} className={\"infoButton\"}>\r\n                                <InfoIcon/>\r\n                            </IconButton>\r\n                            </a>\r\n                        }\r\n                    />\r\n                </GridListItem>\r\n              );\r\n            })}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const url = \"https://api.wunderground.com/api/f038ab32fdec2e20/geolookup/conditions/q/Poland/Gdansk.json\";\r\n\r\nexport async function getWeather() {\r\n  return fetch(url)\r\n    .then(response => response.json())\r\n}","import React,{Component} from 'react'\r\n\r\n\r\nexport default class WeatherView extends Component{\r\n\r\n\r\n  render(){\r\n    return(\r\n      this.props.weather !== null ? (\r\n      <div>\r\n      <h1>Weather in { this.props.weather.current_observation.display_location.full}</h1>\r\n        <img src={\"https\" + this.props.weather.current_observation.icon_url.split(\"\").slice(4).join(\"\")} alt={'weatherIcon'}/>\r\n        <p> temperature: {this.props.weather.current_observation.temp_c} </p>\r\n        <img src={\"https\" + this.props.weather.current_observation.image.url.split(\"\").slice(4).join(\"\")} alt={'wundergroun logo'}/>\r\n      </div>) : <h1>no weather</h1>\r\n\r\n        )\r\n  }\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport {getWeather} from \"./weatherFetcher\";\r\nimport WeatherView from \"./WeatherView\";\r\n\r\n\r\nclass Pogoda extends Component {\r\n  state = {\r\n    weather: null,\r\n    refreshing: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchWeather();\r\n  }\r\n\r\n  fetchWeather() {\r\n    getWeather().then(weather => this.setState({weather: weather, refreshing: false}))\r\n      .catch((error) =>  this.setState({refreshing: false}, console.log(error.message)));\r\n\r\n  }\r\n\r\n  handleWRefresh = () => {\r\n    this.setState({\r\n        refreshing: true},\r\n      () => this.fetchWeather()\r\n    )\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <WeatherView handleWRefresh={this.handleWRefresh} weather={this.state.weather}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pogoda;\r\n","import React, { Component } from 'react'\r\nimport {auth} from 'firebase'\r\nconst UserContext = React.createContext()\r\n\r\nexport const UserConsumer = UserContext.Consumer\r\n\r\nexport class UserProvider extends Component {\r\n  state = {\r\n    signInError: null,\r\n    user: null,\r\n    signing: null,\r\n\r\n    signIn: (username, password) => {\r\n      this.setState({signing: true})\r\n      auth().signInWithEmailAndPassword(username, password).catch(\r\n        error => this.setState({\r\n          signInError: error,\r\n          signing: false\r\n        })\r\n      )\r\n    },\r\n    signOut: () => auth().signOut(),\r\n    signUp: (username, password) => {\r\n      return auth().createUserWithEmailAndPassword(username, password)\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = auth().onAuthStateChanged(\r\n      user => this.setState({ user: user ,\r\n      signing: false})\r\n    )\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport function withUser(Component) {\r\n  function UserAwareComponent(props) {\r\n    return (\r\n      <UserConsumer>\r\n        {\r\n          state => <Component {...props} {...state}/>\r\n        }\r\n      </UserConsumer>\r\n    );\r\n  }\r\n\r\n  UserAwareComponent.displayName = `UserAware(${Component.displayName || Component.name || 'Component'})`\r\n\r\n  return UserAwareComponent\r\n}","import React, { Component } from 'react'\r\nimport { withUser } from '../../contexts/Users';\r\n\r\nclass SignInForm extends Component {\r\n\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    this.props.signIn(this.state.username, this.state.password)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Sign in</h2>\r\n        {this.props.signInError && <p>{this.props.signInError.message}</p>}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            value={this.state.username}\r\n            name=\"username\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            value={this.state.password}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button>sign in</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withUser(SignInForm)","import React, { Component } from 'react'\r\nimport { withUser } from '../../contexts/Users';\r\n\r\nclass SignUpForm extends Component {\r\n\r\n  state = {\r\n    username: '',\r\n    password: '',\r\n    error: null\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    this.props.signUp(this.state.username, this.state.password).catch(\r\n      error => this.setState({ error })\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Sign up</h2>\r\n        {this.state.error && <p>{this.state.error.message}</p>}\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            value={this.state.username}\r\n            name=\"username\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <input\r\n            value={this.state.password}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button>sign up</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withUser(SignUpForm)","import React, {Component} from 'react'\r\n\r\n class CountryContentSelect extends Component {\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.props.handleSelectSubmit} >\r\n            <label>\r\n              <select value={this.props.selectValue} onChange={this.props.handleSelectChange}>\r\n                <option value='us'>USA</option>\r\n                <option value='pl'>Poland</option>\r\n                <option value='de'>Germany</option>\r\n                <option value='gb'>England</option>\r\n              </select>\r\n            </label>\r\n            </form>\r\n        )\r\n}\r\n}\r\nexport default CountryContentSelect","import React, {Component, Fragment} from 'react';\r\nimport {getNews} from \"./news\";\r\nimport Article from \"./components/Article\";\r\nimport Pogoda from \"./Weather/Pogoda\";\r\nimport { withUser } from './contexts/Users';\r\nimport SignInForm from './components/authentication/SignIn'\r\nimport SignUpForm from './components/authentication/SignUp'\r\nimport './loginAnimation.scss'\r\nimport CountryContentSelect from './components/CountryContentSelect'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    articles: [],\r\n    refreshing: true,\r\n    selectValue: 'us'\r\n};\r\n\r\n  componentDidMount(){\r\n    this.fetchNews();\r\n  }\r\n\r\n  fetchNews() {\r\n      this.state.selectValue === null && this.setState({selectValue: 'us'}) \r\n    \r\n    getNews(this.state.selectValue)\r\n    .then(articles => this.setState(\r\n      {articles, refreshing: false}\r\n    )\r\n    ).catch(\r\n    () =>\r\n     this.setState(\r\n       {refreshing: false}\r\n    )\r\n  );\r\n  }\r\n\r\n  handleRefresh = () => {\r\n    this.setState({\r\n        articles: [],\r\n        refreshing: true},\r\n      () => this.fetchNews()\r\n    )\r\n\r\n  };\r\n\r\n  handleSelectChange = event => {\r\nthis.setState({\r\n  selectValue: event.target.value,\r\n      },this.handleRefresh())\r\n  }\r\n\r\n  handleSelectSubmit = event =>{\r\n    this.handleRefresh()\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n\r\n        this.props.user === null ? (\r\n                this.props.signing ===  true ?\r\n                  <div className='loader'></div> : <div>\r\n              <SignInForm/>\r\n              <SignUpForm/>\r\n              </div>\r\n            ) : \r\n            (\r\n            <Fragment>        \r\n                  <Pogoda/>\r\n                  <CountryContentSelect handleSelectSubmit={this.handleSelectSubmit} selectValue={this.state.selectValue} handleSelectChange={this.handleSelectChange}/>\r\n                  <p>Signed user: {this.props.user.email} <button onClick={this.props.signOut}>Sign out</button></p>\r\n              {this.state.refreshing === true ? <div className='loader'></div> : <Article\r\n                  handleRefresh={this.handleRefresh}\r\n                  articles={this.state.articles}\r\n              />}\r\n\r\n            </Fragment>\r\n            )\r\n          \r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default withUser(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n    apiKey: \"AIzaSyC9Kqj9nYbZIyLpQOkck80R6ilV5VDOZEY\",\r\n    authDomain: \"stronka-z-newsami-i-pogoda.firebaseapp.com\",\r\n    databaseURL: \"https://stronka-z-newsami-i-pogoda.firebaseio.com\",\r\n    projectId: \"stronka-z-newsami-i-pogoda\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"504518117423\"\r\n  };","import firebase from 'firebase'\r\nimport config from './config/firebaseConfig'\r\n\r\nexport default () => firebase.initializeApp(config);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport setupFirebase from './setupFirebase';\r\nimport { UserProvider } from './contexts/Users';\r\n\r\nsetupFirebase()\r\n\r\nReactDOM.render(\r\n\r\n    <UserProvider>\r\n    <App />\r\n    </UserProvider>\r\n\r\n    \r\n    , document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}